syntax = "proto3";
package Types;

//边的类型
enum EdgeType {
  eph       = 0;
  estraight = 1;
  earc      = 2;
}

//墙体类型
enum WallType {
  wph     = 0;  //占位
  wfirst  = 1;  //一层有二层无
  wsecond = 2;  //二层有一层无
  wboth   = 3;  //一二层皆有
  wnone   = 4;  //一二层皆无
}

//靠墙类型
enum AgainstWallType {
  aw_ph    = 0;
  aw_no    = 1;
  aw_left  = 2;
  aw_right = 3;
}

//楼梯类型
enum StairType {
  sph      = 0;
  sstright = 1;  //直梯
}

//步数规则
enum StepNumRule {
  snr_ph      = 0;
  snr_n       = 1;
  snr_n_add_1 = 2;
} 

//加边类型
enum NossingType {
  nph     = 0;
  nno     = 1;
  ncommon = 2;
  nluxury = 3;
}

//三维向量
message Vector3{
	float x = 1;
	float y = 2;
	float z = 3;
}

//构成轮廓的边
message Edge {
  Vector3  p1           = 1;  //起点
  Vector3  p2           = 2;  //终点
  EdgeType type         = 3;  //类型
  float    radius       = 4;  // 半径， 针对弧线
  Vector3  position     = 5;  // 圆心位置， 针对弧线
  float    start_angle  = 6;  // 起始角度
  float    end_angle    = 7;  // 终止角度
  bool     is_clockwise = 8;  // 是否为顺时针
}

message Outline {
  repeated Edge edges = 1;
}

//一个项目
message Project {
  string   uuid       = 1;  //项目id
  Hole     hole       = 2;  //洞
  repeated Wall walls = 3;  //墙体数组
  Stair    stair      = 4;  //楼梯
}

//洞
message Hole {
  string   uuid        = 1;
  repeated Edge edges  = 2;  //围成洞的边,边一定按顺序首尾相连
  float    floorHeight = 3;  //层高
}

//墙
message Wall {
  string   uuid        = 1;
  Edge     edge        = 2;  //墙体对应的边
  Edge     outEdge     = 3;  //墙体的外边
  WallType type        = 4;  //类型
  float    startExtend = 5;  //起点延伸
  float    endExtend   = 6;  //终点延伸
  float    depth       = 7;  //厚度
  float    height      = 8;  //高度
}

message Inlay {

}

message Material {

}

//一套楼梯
message Stair {
  string          uuid            = 1;
  float           startBeamDepth  = 2;   //起步梁厚度
  float           exitBeamDepth   = 3;   //出口梁厚度
  StairType       type            = 4;   //类型
  AgainstWallType againstWallType = 5;   //靠墙类型
  TreadParameters treadParameters = 6;   //踏板参数
  RiserParameters riserParameters = 7;   //立板参数
  repeated        Flight flights  = 15;  //楼梯段集合
}

//一段楼梯
message Flight {
  string      uuid         = 1;
  float       stepLength   = 2;  //步长
  float       stepWidth    = 3;  //步宽
  float       stepHeight   = 4;  //步高
  StepNumRule stepNumRule  = 5;  //步数规则
  float       stepNum      = 6;  //步数
  repeated    Tread treads = 7;  //踏板集合
  repeated    Riser risers = 8;  //立板集合
}

//踏板
message Tread {
  string  uuid        = 1;
  Outline stepOutline = 2;  //踏板边缘轮廓
}

//踏板参数
message TreadParameters {
  float       depth              = 1;  //厚度
  Material    material           = 2;  //材质
  bool        doubleFaceMaterial = 3;  //是否双面漆
  NossingType nossingType        = 4;  //加边类型
  float       nossing            = 5;  //加边厚度
}

message Riser {
  string uuid = 1;
}

message RiserParameters {

}



