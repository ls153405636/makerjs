syntax = "proto3";
package Types;

//边的类型
enum EdgeType {
  eph       = 0;
  estraight = 1;
  earc      = 2;
}

//墙体类型
enum WallType {
  wph     = 0;  //占位
  wfirst  = 1;  //一层有二层无
  wsecond = 2;  //二层有一层无
  wboth   = 3;  //一二层皆有
  wnone   = 4;  //一二层皆无
}

//靠墙类型
enum AgainstWallType {
  aw_ph    = 0;
  aw_no    = 1;
  aw_left  = 2;
  aw_right = 3;
}

//楼梯类型
enum StairType {
  sph      = 0;
  sstright = 1;  //直梯
}

//步数规则
enum StepNumRule {
  snr_ph      = 0;
  snr_n       = 1;
  snr_n_add_1 = 2;
} 

//加边类型
enum NossingType {
  nph     = 0;
  nno     = 1;
  ncommon = 2;
  nluxury = 3;
}

enum ComponentType {
  cph        = 0;
  cdoor      = 1;  //门
  cwindow    = 2;  //窗
  cdoor_hole = 3;  //门洞
  cbeam      = 4;  //梁
  cpillar    = 5;  //柱
}

//三维向量
message Vector3{
	float x = 1;
	float y = 2;
	float z = 3;
}

//构成轮廓的边
message Edge {
  Vector3  p1           = 1;  //起点
  Vector3  p2           = 2;  //终点
  EdgeType type         = 3;  //类型
  float    radius       = 4;  // 半径， 针对弧线
  Vector3  position     = 5;  // 圆心位置， 针对弧线
  float    start_angle  = 6;  // 起始角度
  float    end_angle    = 7;  // 终止角度
  bool     is_clockwise = 8;  // 是否为顺时针
}

message Outline {
  repeated Edge edges = 1;
}

//一个项目
message Project {
  string   uuid       = 1;  //项目id
  Hole     hole       = 2;  //洞
  repeated Wall walls = 3;  //墙体数组
  Stair    stair      = 4;  //楼梯
}

//洞
message Hole {
  string   uuid        = 1;
  repeated Edge edges  = 2;  //围成洞的边,边一定按顺序首尾相连
  float    floorHeight = 3;  //层高
}

//墙
message Wall {
  string   uuid                 = 1;
  Edge     edge                 = 2;   //墙体对应的边
  Edge     outEdge              = 3;   //墙体的外边
  WallType type                 = 4;   //类型
  float    startExtend          = 5;   //起点延伸
  float    endExtend            = 6;   //终点延伸
  float    depth                = 7;   //厚度
  float    height               = 8;   //高度
  repeated Component components = 9;   //部件集合
  Edge     holeEdge             = 10;  //对应的洞口边
  Vector3  normal               = 11;  //法线向量
}

//门窗门洞梁柱等房间组件
message Component {
  string        uuid       = 1;
  ComponentType type       = 2;   //类型
  float         width      = 3;   //宽 旋转值为0时，x轴方向的尺寸为宽
  float         height     = 4;   //高 
  float         depth      = 5;   //深，旋转值为0时，y轴方向的尺寸为深，门窗门洞不可修改此属性
  float         offGround  = 6;   //离地， 柱的离地默认为0，不可修改
  float         disToStart = 7;   //距起点的距离，梁平行于墙，此处不可修改
  float         interval   = 8;   //与墙之间的间隙，门窗门洞置于墙内，不可修改
  Vector3       position   = 9;   //位置
  Vector3       rotation   = 10;  //旋转 范围是（0，2pai）
}

message Material {

}

//一套楼梯
message Stair {
  string          uuid             = 1;
  float           startBeamDepth   = 2;   //起步梁厚度
  float           exitBeamDepth    = 3;   //出口梁厚度
  StairType       type             = 4;   //类型
  AgainstWallType againstWallType  = 5;   //靠墙类型
  TreadParameters treadParameters  = 6;   //踏板参数
  RiserParameters riserParameters  = 7;   //立板参数
  StepParameters  stepParameters   = 8;   //踏步参数
  float           stepHeight       = 9;   //步高
  repeated        Flight flights   = 15;  //楼梯段集合
  repeated        Landing landings = 16;  //休息平台合集
  Vector3         position         = 17;  //为包围框左上角顶点的坐标
}

//一段楼梯
message Flight {
  string         uuid           = 1;
  float          stepHeight     = 4;  //步高
  StepParameters stepParameters = 5;  //踏步参数
  repeated       Tread treads   = 7;  //踏板集合
  repeated       Riser risers   = 8;  //立板集合
}

//踏板
message Tread {
  string  uuid        = 1;
  Outline stepOutline = 2;  //踏板边缘轮廓
}

message StepParameters {
  float       stepLength  = 1;  //步长
  float       stepWidth   = 2;  //步宽
  StepNumRule stepNumRule = 3;  //步数规则
  float       stepNum     = 4;  //步数
}

//踏板参数
message TreadParameters {
  float       depth              = 1;  //厚度
  Material    material           = 2;  //材质
  bool        doubleFaceMaterial = 3;  //是否双面漆
  NossingType nossingType        = 4;  //加边类型
  float       nossing            = 5;  //加边厚度
  float       sideNossing        = 6;  //飘边长度
}

message Landing {
}

message Riser {
  string uuid = 1;
}

message RiserParameters {
  bool  riserExist = 1;
  float depth      = 2;

}



